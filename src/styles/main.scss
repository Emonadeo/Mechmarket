@use 'sass:list';
@use 'sass:map';
@use 'typography';
@use 'color';
@use 'reset';
@use 'shape';
@use 'markdown';

* {
    box-sizing: border-box;
}

// build typography classes
@mixin type($type, $props) {
    @each $prop, $value in $props {
        @if $prop == 'before' {
            &::before {
                content: '';
                margin-top: $value;
                display: block;
                height: 0;
            }
        } @else if $prop == 'after' {
            &::after {
                content: '';
                margin-bottom: $value;
                display: block;
                height: 0;
            }
        } @else {
            #{$prop}: #{$value};
        }
    }
}

@each $type, $props in typography.$typography {
    @if (list.index((h1, h2, h3, h4, h5, h6), $type) != null) {
        .markdown #{$type} {
            @include type($type, $props);
        }
    }
    @if ($type == 'body1') {
        p,
        td,
        th,
        .markdown li {
            @include type($type, $props);
        }

        .markdown li {
            margin-bottom: map.get($props, line-height) - 12px;
        }
    }
    .type-#{$type} {
        @include type($type, $props);
    }
}

// build color classes
@each $color, $values in color.$map {
    .#{$color} {
        $bg: list.nth($values, 1);
        $fg: list.nth($values, 2);

        background-color: $bg;
        color: $fg;
        border-color: $fg;

        svg {
            fill: $fg;
        }
    }
}
